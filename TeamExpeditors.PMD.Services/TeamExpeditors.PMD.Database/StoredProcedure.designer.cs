#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TeamExpeditors.PMD.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PMD")]
	public partial class StoredProcedureDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    #endregion
		
		public StoredProcedureDataContext() : 
				base(global::TeamExpeditors.PMD.Database.Properties.Settings.Default.PMDConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public StoredProcedureDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StoredProcedureDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StoredProcedureDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StoredProcedureDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ShowOneItemAndTeams")]
		public ISingleResult<ShowOneItemAndTeamsResult> ShowOneItemAndTeams([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DashboardID", DbType="Int")] System.Nullable<int> dashboardID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dashboardID);
			return ((ISingleResult<ShowOneItemAndTeamsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ShowAllUsersInCompany")]
		public ISingleResult<ShowAllUsersInCompanyResult> ShowAllUsersInCompany([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompanyID", DbType="Int")] System.Nullable<int> companyID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyID);
			return ((ISingleResult<ShowAllUsersInCompanyResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ShowAllTeamsInCompany")]
		public ISingleResult<ShowAllTeamsInCompanyResult> ShowAllTeamsInCompany([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> companyID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyID);
			return ((ISingleResult<ShowAllTeamsInCompanyResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ShowAllItemsAndTeams")]
		public ISingleResult<ShowAllItemsAndTeamsResult> ShowAllItemsAndTeams([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DashboardID", DbType="Int")] System.Nullable<int> dashboardID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dashboardID);
			return ((ISingleResult<ShowAllItemsAndTeamsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ShowAllAccessRights")]
		public ISingleResult<ShowAllAccessRightsResult> ShowAllAccessRights([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DashboardID", DbType="Int")] System.Nullable<int> dashboardID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dashboardID);
			return ((ISingleResult<ShowAllAccessRightsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RetreiveTeamsWorkingOnItem")]
		public ISingleResult<RetreiveTeamsWorkingOnItemResult> RetreiveTeamsWorkingOnItem([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> dashboardItemID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dashboardItemID);
			return ((ISingleResult<RetreiveTeamsWorkingOnItemResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RetreiveTeamsWorkingOnDashboard")]
		public ISingleResult<RetreiveTeamsWorkingOnDashboardResult> RetreiveTeamsWorkingOnDashboard([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> dashboardID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dashboardID);
			return ((ISingleResult<RetreiveTeamsWorkingOnDashboardResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RetreiveTeams")]
		public ISingleResult<RetreiveTeamsResult> RetreiveTeams([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> companyID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyID);
			return ((ISingleResult<RetreiveTeamsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RetreiveExistingDashboards")]
		public ISingleResult<RetreiveExistingDashboardsResult> RetreiveExistingDashboards([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID);
			return ((ISingleResult<RetreiveExistingDashboardsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RetreiveExistingDashboardItemsByTeamID")]
		public ISingleResult<RetreiveExistingDashboardItemsByTeamIDResult> RetreiveExistingDashboardItemsByTeamID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DashboardID", DbType="Int")] System.Nullable<int> dashboardID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> teamID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dashboardID, teamID);
			return ((ISingleResult<RetreiveExistingDashboardItemsByTeamIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RetreiveCompanies")]
		public ISingleResult<RetreiveCompaniesResult> RetreiveCompanies()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<RetreiveCompaniesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LoginAuthentication")]
		public ISingleResult<LoginAuthenticationResult> LoginAuthentication([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string userEmail, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string encryptedPassword)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userEmail, encryptedPassword);
			return ((ISingleResult<LoginAuthenticationResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertUserDetails")]
		public int InsertUserDetails([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CompanyID", DbType="Int")] System.Nullable<int> companyID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FirstName", DbType="NVarChar(16)")] string firstName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Lastname", DbType="NVarChar(16)")] string lastname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string userEmail, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsOwner", DbType="Bit")] System.Nullable<bool> isOwner, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EncryptedPassword", DbType="NVarChar(128)")] string encryptedPassword)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyID, firstName, lastname, userEmail, isOwner, encryptedPassword);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertTestData", IsComposable=true)]
		public object InsertTestData([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Test1", DbType="Int")] System.Nullable<int> test1, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Test2", DbType="VarChar(50)")] string test2)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), test1, test2).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertDashboardUser")]
		public ISingleResult<InsertDashboardUserResult> InsertDashboardUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccessRight", DbType="VarChar(15)")] string accessRight, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DashboardID", DbType="Int")] System.Nullable<int> dashboardID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accessRight, userID, dashboardID);
			return ((ISingleResult<InsertDashboardUserResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetDashboardData")]
		public int GetDashboardData([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DashboardName", DbType="VarChar(40)")] string dashboardName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartMonth", DbType="Int")] System.Nullable<int> startMonth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartYear", DbType="Int")] System.Nullable<int> startYear, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndMonth", DbType="Int")] System.Nullable<int> endMonth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndYear", DbType="Int")] System.Nullable<int> endYear)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dashboardName, startMonth, startYear, endMonth, endYear);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.EditDataItemName")]
		public int EditDataItemName([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemName", DbType="NVarChar(32)")] string itemName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DashboardID", DbType="Int")] System.Nullable<int> dashboardID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemID", DbType="Int")] System.Nullable<int> itemID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemName, dashboardID, itemID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.EditDataItemLength")]
		public int EditDataItemLength([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartDate", DbType="Date")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndDate", DbType="Date")] System.Nullable<System.DateTime> endDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DashboardID", DbType="Int")] System.Nullable<int> dashboardID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemID", DbType="Int")] System.Nullable<int> itemID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startDate, endDate, dashboardID, itemID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteUsersFromDashboard")]
		public int DeleteUsersFromDashboard([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DashboardID", DbType="Int")] System.Nullable<int> dashboardID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dashboardID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteTeamsFromDashboardItem")]
		public int DeleteTeamsFromDashboardItem([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemID", DbType="Int")] System.Nullable<int> itemID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteTeams")]
		public int DeleteTeams([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> companyID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteTeam")]
		public int DeleteTeam([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> teamID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), teamID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteDataItem")]
		public int DeleteDataItem([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemName", DbType="VarChar(40)")] string itemName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CompanyRegisteration")]
		public ISingleResult<CompanyRegisterationResult> CompanyRegisteration([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string companyAccount, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string companyName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Text")] string companyURL)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), companyAccount, companyName, companyURL);
			return ((ISingleResult<CompanyRegisterationResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CheckAccessRights")]
		public ISingleResult<CheckAccessRightsResult> CheckAccessRights([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DashboardID", DbType="Int")] System.Nullable<int> dashboardID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dashboardID);
			return ((ISingleResult<CheckAccessRightsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ChangeAccessRights")]
		public int ChangeAccessRights([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccessRight", DbType="NVarChar(16)")] string accessRight, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DashboardID", DbType="Int")] System.Nullable<int> dashboardID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accessRight, dashboardID, userID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddUserToDashboard")]
		public int AddUserToDashboard([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccessRight", DbType="NVarChar(16)")] string accessRight, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DashboardID", DbType="Int")] System.Nullable<int> dashboardID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accessRight, dashboardID, id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddTeamToDashboardItem")]
		public int AddTeamToDashboardItem([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeamID", DbType="Int")] System.Nullable<int> teamID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, teamID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddTeams")]
		public int AddTeams([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TeamName", DbType="NVarChar(32)")] string teamName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> companyID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), teamName, companyID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ShowAllItemsAndTeamsOuterJoin")]
		public ISingleResult<ShowAllItemsAndTeamsOuterJoinResult> ShowAllItemsAndTeamsOuterJoin([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DashboardID", DbType="Int")] System.Nullable<int> dashboardID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dashboardID);
			return ((ISingleResult<ShowAllItemsAndTeamsOuterJoinResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RetreiveSource")]
		public ISingleResult<RetreiveSourceResult> RetreiveSource([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> dashboardID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dashboardID);
			return ((ISingleResult<RetreiveSourceResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RetreiveStatus")]
		public ISingleResult<RetreiveStatusResult> RetreiveStatus([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> dashboardID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dashboardID);
			return ((ISingleResult<RetreiveStatusResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddDataItem")]
		public ISingleResult<AddDataItemResult> AddDataItem([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemName", DbType="NVarChar(16)")] string itemName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartDate", DbType="Date")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndDate", DbType="Date")] System.Nullable<System.DateTime> endDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DashboardID", DbType="Int")] System.Nullable<int> dashboardID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusID", DbType="Int")] System.Nullable<int> statusID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemName, startDate, endDate, dashboardID, statusID);
			return ((ISingleResult<AddDataItemResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddDataItemSource")]
		public int AddDataItemSource([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SourceID", DbType="Int")] System.Nullable<int> sourceID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID, sourceID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RetreiveDashboardItem")]
		public ISingleResult<RetreiveDashboardItemResult> RetreiveDashboardItem([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> itemID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID);
			return ((ISingleResult<RetreiveDashboardItemResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSourcesByItemID")]
		public ISingleResult<GetSourcesByItemIDResult> GetSourcesByItemID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> itemID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID);
			return ((ISingleResult<GetSourcesByItemIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetDashboardByID")]
		public ISingleResult<GetDashboardByIDResult> GetDashboardByID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((ISingleResult<GetDashboardByIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RetreiveExistingDashboardItems")]
		public ISingleResult<RetreiveExistingDashboardItemsResult> RetreiveExistingDashboardItems([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DashboardID", DbType="Int")] System.Nullable<int> dashboardID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string sortBy)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dashboardID, sortBy);
			return ((ISingleResult<RetreiveExistingDashboardItemsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddDashboardSources")]
		public int AddDashboardSources([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Source", DbType="NVarChar(20)")] string source, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DashboardID", DbType="Int")] System.Nullable<int> dashboardID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), source, dashboardID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddDashboardStatus")]
		public int AddDashboardStatus([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string status, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(6)")] string color, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> dashboardID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), status, color, dashboardID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CreateDashboard")]
		public ISingleResult<CreateDashboardResult> CreateDashboard([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DashboardName", DbType="VarChar(40)")] string dashboardName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartMonth", DbType="Int")] System.Nullable<int> startMonth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartYear", DbType="Int")] System.Nullable<int> startYear, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndMonth", DbType="Int")] System.Nullable<int> endMonth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndYear", DbType="Int")] System.Nullable<int> endYear, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccessRight", DbType="VarChar(15)")] string accessRight, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="Text")] string description)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dashboardName, startMonth, startYear, endMonth, endYear, userID, accessRight, description);
			return ((ISingleResult<CreateDashboardResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteDashboardStatus")]
		public int DeleteDashboardStatus([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> sID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteDashboardSource")]
		public int DeleteDashboardSource([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> sID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteDashboardItem")]
		public int DeleteDashboardItem([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> itemID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteDashboard")]
		public int DeleteDashboard([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DashboardID", DbType="Int")] System.Nullable<int> dashboardID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dashboardID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RetreiveExistingDashboardItemsSortedAndFiltered")]
		public ISingleResult<RetreiveExistingDashboardItemsSortedAndFilteredResult> RetreiveExistingDashboardItemsSortedAndFiltered([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DashboardID", DbType="Int")] System.Nullable<int> dashboardID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string sortBy, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string teamID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dashboardID, sortBy, teamID);
			return ((ISingleResult<RetreiveExistingDashboardItemsSortedAndFilteredResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RetreiveExistingDashboardItemsSortedAndFilteredDistinct")]
		public ISingleResult<RetreiveExistingDashboardItemsSortedAndFilteredDistinctResult> RetreiveExistingDashboardItemsSortedAndFilteredDistinct([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DashboardID", DbType="Int")] System.Nullable<int> dashboardID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string sortBy, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string teamID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dashboardID, sortBy, teamID);
			return ((ISingleResult<RetreiveExistingDashboardItemsSortedAndFilteredDistinctResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LoginAuthenticationWithCompanyDetails")]
		public ISingleResult<LoginAuthenticationWithCompanyDetailsResult> LoginAuthenticationWithCompanyDetails([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string userEmail, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string encryptedPassword)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userEmail, encryptedPassword);
			return ((ISingleResult<LoginAuthenticationWithCompanyDetailsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RetreiveExistingDashboardItemsSortedAndFilteredDistinctColor")]
		public ISingleResult<RetreiveExistingDashboardItemsSortedAndFilteredDistinctColorResult> RetreiveExistingDashboardItemsSortedAndFilteredDistinctColor([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DashboardID", DbType="Int")] System.Nullable<int> dashboardID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string sortBy, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string teamID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dashboardID, sortBy, teamID);
			return ((ISingleResult<RetreiveExistingDashboardItemsSortedAndFilteredDistinctColorResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.EditDashboard")]
		public int EditDashboard([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DashboardID", DbType="Int")] System.Nullable<int> dashboardID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DashboardName", DbType="VarChar(40)")] string dashboardName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartMonth", DbType="Int")] System.Nullable<int> startMonth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartYear", DbType="Int")] System.Nullable<int> startYear, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndMonth", DbType="Int")] System.Nullable<int> endMonth, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndYear", DbType="Int")] System.Nullable<int> endYear, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="Text")] string description)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dashboardID, dashboardName, startMonth, startYear, endMonth, endYear, description);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ChangePassword")]
		public int ChangePassword([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(40)")] string newPassword)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, newPassword);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AuthenticationByID")]
		public ISingleResult<AuthenticationByIDResult> AuthenticationByID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string encryptedPassword)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID, encryptedPassword);
			return ((ISingleResult<AuthenticationByIDResult>)(result.ReturnValue));
		}
	}
	
	public partial class ShowOneItemAndTeamsResult
	{
		
		private string _ItemName;
		
		private string _TeamName;
		
		public ShowOneItemAndTeamsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this._ItemName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamName", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string TeamName
		{
			get
			{
				return this._TeamName;
			}
			set
			{
				if ((this._TeamName != value))
				{
					this._TeamName = value;
				}
			}
		}
	}
	
	public partial class ShowAllUsersInCompanyResult
	{
		
		private string _FirstName;
		
		private string _LastName;
		
		private int _UserId;
		
		public ShowAllUsersInCompanyResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(16)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
	}
	
	public partial class ShowAllTeamsInCompanyResult
	{
		
		private int _TeamID;
		
		private string _TeamName;
		
		public ShowAllTeamsInCompanyResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamID", DbType="Int NOT NULL")]
		public int TeamID
		{
			get
			{
				return this._TeamID;
			}
			set
			{
				if ((this._TeamID != value))
				{
					this._TeamID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamName", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string TeamName
		{
			get
			{
				return this._TeamName;
			}
			set
			{
				if ((this._TeamName != value))
				{
					this._TeamName = value;
				}
			}
		}
	}
	
	public partial class ShowAllItemsAndTeamsResult
	{
		
		private int _ItemID;
		
		private string _ItemName;
		
		private int _TeamID;
		
		private string _TeamName;
		
		public ShowAllItemsAndTeamsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this._ItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this._ItemName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamID", DbType="Int NOT NULL")]
		public int TeamID
		{
			get
			{
				return this._TeamID;
			}
			set
			{
				if ((this._TeamID != value))
				{
					this._TeamID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamName", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string TeamName
		{
			get
			{
				return this._TeamName;
			}
			set
			{
				if ((this._TeamName != value))
				{
					this._TeamName = value;
				}
			}
		}
	}
	
	public partial class ShowAllAccessRightsResult
	{
		
		private string _FirstName;
		
		private int _UserID;
		
		private string _AccessRight;
		
		public ShowAllAccessRightsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessRight", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		public string AccessRight
		{
			get
			{
				return this._AccessRight;
			}
			set
			{
				if ((this._AccessRight != value))
				{
					this._AccessRight = value;
				}
			}
		}
	}
	
	public partial class RetreiveTeamsWorkingOnItemResult
	{
		
		private int _TeamID;
		
		private string _TeamName;
		
		public RetreiveTeamsWorkingOnItemResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamID", DbType="Int NOT NULL")]
		public int TeamID
		{
			get
			{
				return this._TeamID;
			}
			set
			{
				if ((this._TeamID != value))
				{
					this._TeamID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamName", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string TeamName
		{
			get
			{
				return this._TeamName;
			}
			set
			{
				if ((this._TeamName != value))
				{
					this._TeamName = value;
				}
			}
		}
	}
	
	public partial class RetreiveTeamsWorkingOnDashboardResult
	{
		
		private int _ItemID;
		
		private int _TeamID;
		
		public RetreiveTeamsWorkingOnDashboardResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this._ItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamID", DbType="Int NOT NULL")]
		public int TeamID
		{
			get
			{
				return this._TeamID;
			}
			set
			{
				if ((this._TeamID != value))
				{
					this._TeamID = value;
				}
			}
		}
	}
	
	public partial class RetreiveTeamsResult
	{
		
		private int _TeamID;
		
		private string _TeamName;
		
		private int _CompanyID;
		
		public RetreiveTeamsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamID", DbType="Int NOT NULL")]
		public int TeamID
		{
			get
			{
				return this._TeamID;
			}
			set
			{
				if ((this._TeamID != value))
				{
					this._TeamID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamName", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string TeamName
		{
			get
			{
				return this._TeamName;
			}
			set
			{
				if ((this._TeamName != value))
				{
					this._TeamName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this._CompanyID = value;
				}
			}
		}
	}
	
	public partial class RetreiveExistingDashboardsResult
	{
		
		private int _DashboardID;
		
		private string _Description;
		
		private string _DashboardName;
		
		private int _EndMonth;
		
		private int _EndYear;
		
		private int _StartMonth;
		
		private int _StartYear;
		
		private string _AccessRight;
		
		public RetreiveExistingDashboardsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardID", DbType="Int NOT NULL")]
		public int DashboardID
		{
			get
			{
				return this._DashboardID;
			}
			set
			{
				if ((this._DashboardID != value))
				{
					this._DashboardID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DashboardName
		{
			get
			{
				return this._DashboardName;
			}
			set
			{
				if ((this._DashboardName != value))
				{
					this._DashboardName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndMonth", DbType="Int NOT NULL")]
		public int EndMonth
		{
			get
			{
				return this._EndMonth;
			}
			set
			{
				if ((this._EndMonth != value))
				{
					this._EndMonth = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndYear", DbType="Int NOT NULL")]
		public int EndYear
		{
			get
			{
				return this._EndYear;
			}
			set
			{
				if ((this._EndYear != value))
				{
					this._EndYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartMonth", DbType="Int NOT NULL")]
		public int StartMonth
		{
			get
			{
				return this._StartMonth;
			}
			set
			{
				if ((this._StartMonth != value))
				{
					this._StartMonth = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartYear", DbType="Int NOT NULL")]
		public int StartYear
		{
			get
			{
				return this._StartYear;
			}
			set
			{
				if ((this._StartYear != value))
				{
					this._StartYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessRight", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		public string AccessRight
		{
			get
			{
				return this._AccessRight;
			}
			set
			{
				if ((this._AccessRight != value))
				{
					this._AccessRight = value;
				}
			}
		}
	}
	
	public partial class RetreiveExistingDashboardItemsByTeamIDResult
	{
		
		private int _DashboardID;
		
		private System.DateTime _EndDate;
		
		private int _ItemID;
		
		private string _ItemName;
		
		private System.DateTime _StartDate;
		
		public RetreiveExistingDashboardItemsByTeamIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardID", DbType="Int NOT NULL")]
		public int DashboardID
		{
			get
			{
				return this._DashboardID;
			}
			set
			{
				if ((this._DashboardID != value))
				{
					this._DashboardID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this._ItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this._ItemName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
	}
	
	public partial class RetreiveCompaniesResult
	{
		
		private string _Name;
		
		private int _CompanyID;
		
		public RetreiveCompaniesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this._CompanyID = value;
				}
			}
		}
	}
	
	public partial class LoginAuthenticationResult
	{
		
		private int _UserID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private int _CompanyID;
		
		private bool _IsOwner;
		
		public LoginAuthenticationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(16)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this._CompanyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOwner", DbType="Bit NOT NULL")]
		public bool IsOwner
		{
			get
			{
				return this._IsOwner;
			}
			set
			{
				if ((this._IsOwner != value))
				{
					this._IsOwner = value;
				}
			}
		}
	}
	
	public partial class InsertDashboardUserResult
	{
		
		private int _DashboardID;
		
		public InsertDashboardUserResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardID", DbType="Int NOT NULL")]
		public int DashboardID
		{
			get
			{
				return this._DashboardID;
			}
			set
			{
				if ((this._DashboardID != value))
				{
					this._DashboardID = value;
				}
			}
		}
	}
	
	public partial class CompanyRegisterationResult
	{
		
		private System.Nullable<decimal> _Column1;
		
		public CompanyRegisterationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class CheckAccessRightsResult
	{
		
		private string _AccessRight;
		
		public CheckAccessRightsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessRight", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		public string AccessRight
		{
			get
			{
				return this._AccessRight;
			}
			set
			{
				if ((this._AccessRight != value))
				{
					this._AccessRight = value;
				}
			}
		}
	}
	
	public partial class ShowAllItemsAndTeamsOuterJoinResult
	{
		
		private int _ItemID;
		
		private string _ItemName;
		
		private System.Nullable<int> _TeamID;
		
		private string _TeamName;
		
		public ShowAllItemsAndTeamsOuterJoinResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this._ItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this._ItemName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamID", DbType="Int")]
		public System.Nullable<int> TeamID
		{
			get
			{
				return this._TeamID;
			}
			set
			{
				if ((this._TeamID != value))
				{
					this._TeamID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamName", DbType="NVarChar(32)")]
		public string TeamName
		{
			get
			{
				return this._TeamName;
			}
			set
			{
				if ((this._TeamName != value))
				{
					this._TeamName = value;
				}
			}
		}
	}
	
	public partial class RetreiveSourceResult
	{
		
		private int _SourceID;
		
		private string _Source;
		
		private int _DashboardID;
		
		public RetreiveSourceResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceID", DbType="Int NOT NULL")]
		public int SourceID
		{
			get
			{
				return this._SourceID;
			}
			set
			{
				if ((this._SourceID != value))
				{
					this._SourceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this._Source = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardID", DbType="Int NOT NULL")]
		public int DashboardID
		{
			get
			{
				return this._DashboardID;
			}
			set
			{
				if ((this._DashboardID != value))
				{
					this._DashboardID = value;
				}
			}
		}
	}
	
	public partial class RetreiveStatusResult
	{
		
		private int _StatusID;
		
		private string _Status;
		
		private string _Color;
		
		private int _DashboardID;
		
		public RetreiveStatusResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this._StatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this._Color = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardID", DbType="Int NOT NULL")]
		public int DashboardID
		{
			get
			{
				return this._DashboardID;
			}
			set
			{
				if ((this._DashboardID != value))
				{
					this._DashboardID = value;
				}
			}
		}
	}
	
	public partial class AddDataItemResult
	{
		
		private System.Nullable<decimal> _Column1;
		
		public AddDataItemResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class RetreiveDashboardItemResult
	{
		
		private int _ItemID;
		
		private string _ItemName;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private int _DashboardID;
		
		private int _StatusID;
		
		public RetreiveDashboardItemResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this._ItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this._ItemName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardID", DbType="Int NOT NULL")]
		public int DashboardID
		{
			get
			{
				return this._DashboardID;
			}
			set
			{
				if ((this._DashboardID != value))
				{
					this._DashboardID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this._StatusID = value;
				}
			}
		}
	}
	
	public partial class GetSourcesByItemIDResult
	{
		
		private int _SourceID;
		
		private string _Source;
		
		public GetSourcesByItemIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceID", DbType="Int NOT NULL")]
		public int SourceID
		{
			get
			{
				return this._SourceID;
			}
			set
			{
				if ((this._SourceID != value))
				{
					this._SourceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this._Source = value;
				}
			}
		}
	}
	
	public partial class GetDashboardByIDResult
	{
		
		private string _DashboardName;
		
		private int _StartMonth;
		
		private int _StartYear;
		
		private int _EndMonth;
		
		private int _EndYear;
		
		private string _Description;
		
		public GetDashboardByIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DashboardName
		{
			get
			{
				return this._DashboardName;
			}
			set
			{
				if ((this._DashboardName != value))
				{
					this._DashboardName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartMonth", DbType="Int NOT NULL")]
		public int StartMonth
		{
			get
			{
				return this._StartMonth;
			}
			set
			{
				if ((this._StartMonth != value))
				{
					this._StartMonth = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartYear", DbType="Int NOT NULL")]
		public int StartYear
		{
			get
			{
				return this._StartYear;
			}
			set
			{
				if ((this._StartYear != value))
				{
					this._StartYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndMonth", DbType="Int NOT NULL")]
		public int EndMonth
		{
			get
			{
				return this._EndMonth;
			}
			set
			{
				if ((this._EndMonth != value))
				{
					this._EndMonth = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndYear", DbType="Int NOT NULL")]
		public int EndYear
		{
			get
			{
				return this._EndYear;
			}
			set
			{
				if ((this._EndYear != value))
				{
					this._EndYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	public partial class RetreiveExistingDashboardItemsResult
	{
		
		private int _ItemID;
		
		private string _ItemName;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private int _DashboardID;
		
		private int _StatusID;
		
		public RetreiveExistingDashboardItemsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this._ItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this._ItemName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardID", DbType="Int NOT NULL")]
		public int DashboardID
		{
			get
			{
				return this._DashboardID;
			}
			set
			{
				if ((this._DashboardID != value))
				{
					this._DashboardID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this._StatusID = value;
				}
			}
		}
	}
	
	public partial class CreateDashboardResult
	{
		
		private System.Nullable<decimal> _Column1;
		
		public CreateDashboardResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class RetreiveExistingDashboardItemsSortedAndFilteredResult
	{
		
		private int _DashboardID;
		
		private System.DateTime _EndDate;
		
		private int _ItemID;
		
		private string _ItemName;
		
		private System.DateTime _StartDate;
		
		public RetreiveExistingDashboardItemsSortedAndFilteredResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardID", DbType="Int NOT NULL")]
		public int DashboardID
		{
			get
			{
				return this._DashboardID;
			}
			set
			{
				if ((this._DashboardID != value))
				{
					this._DashboardID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this._ItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this._ItemName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
	}
	
	public partial class RetreiveExistingDashboardItemsSortedAndFilteredDistinctResult
	{
		
		private int _DashboardID;
		
		private System.DateTime _EndDate;
		
		private int _ItemID;
		
		private string _ItemName;
		
		private System.DateTime _StartDate;
		
		public RetreiveExistingDashboardItemsSortedAndFilteredDistinctResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardID", DbType="Int NOT NULL")]
		public int DashboardID
		{
			get
			{
				return this._DashboardID;
			}
			set
			{
				if ((this._DashboardID != value))
				{
					this._DashboardID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this._ItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this._ItemName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
	}
	
	public partial class LoginAuthenticationWithCompanyDetailsResult
	{
		
		private int _UserID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private int _CompanyID;
		
		private bool _IsOwner;
		
		private string _Name;
		
		private string _Account;
		
		private string _Url;
		
		public LoginAuthenticationWithCompanyDetailsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(16)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this._CompanyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOwner", DbType="Bit NOT NULL")]
		public bool IsOwner
		{
			get
			{
				return this._IsOwner;
			}
			set
			{
				if ((this._IsOwner != value))
				{
					this._IsOwner = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this._Account = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this._Url = value;
				}
			}
		}
	}
	
	public partial class RetreiveExistingDashboardItemsSortedAndFilteredDistinctColorResult
	{
		
		private int _DashboardID;
		
		private System.DateTime _EndDate;
		
		private int _ItemID;
		
		private string _ItemName;
		
		private System.DateTime _StartDate;
		
		private int _StatusID;
		
		private string _Status;
		
		private string _Color;
		
		public RetreiveExistingDashboardItemsSortedAndFilteredDistinctColorResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardID", DbType="Int NOT NULL")]
		public int DashboardID
		{
			get
			{
				return this._DashboardID;
			}
			set
			{
				if ((this._DashboardID != value))
				{
					this._DashboardID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this._ItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this._ItemName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this._StatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(6) NOT NULL", CanBeNull=false)]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this._Color = value;
				}
			}
		}
	}
	
	public partial class AuthenticationByIDResult
	{
		
		private string _FirstName;
		
		public AuthenticationByIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(16) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
